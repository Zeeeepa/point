// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v3.19.4
// source: windsurf/message.proto

package windsurf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ChatMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Schema         *ChatMessage_Schema           `protobuf:"bytes,1,opt,name=schema,proto3" json:"schema,omitempty"`
	Instructions   string                        `protobuf:"bytes,2,opt,name=Instructions,proto3" json:"Instructions,omitempty"` // 不允许为空？
	Messages       []*ChatMessage_UserMessage    `protobuf:"bytes,3,rep,name=messages,proto3" json:"messages,omitempty"`
	Model          uint32                        `protobuf:"varint,6,opt,name=model,proto3" json:"model,omitempty"` // 模型 ？？ 109: gpt4o 166:claude3.5sonnet
	UnknownField7  uint32                        `protobuf:"varint,7,opt,name=unknown_field7,json=unknownField7,proto3" json:"unknown_field7,omitempty"`
	Config         *ChatMessage_Config           `protobuf:"bytes,8,opt,name=config,proto3" json:"config,omitempty"`
	UnknownField9  []*ChatMessage_Unknown_Field9 `protobuf:"bytes,9,rep,name=unknown_field9,json=unknownField9,proto3" json:"unknown_field9,omitempty"`
	Tools          []*ChatMessage_Tool           `protobuf:"bytes,10,rep,name=tools,proto3" json:"tools,omitempty"`
	Choice         *ChatMessage_ToolChoice       `protobuf:"bytes,12,opt,name=choice,proto3" json:"choice,omitempty"`
	UnknownField13 *ChatMessage_Unknown_Field13  `protobuf:"bytes,13,opt,name=unknown_field13,json=unknownField13,proto3" json:"unknown_field13,omitempty"`
	UnknownField15 *ChatMessage_Unknown_Field15  `protobuf:"bytes,15,opt,name=unknown_field15,json=unknownField15,proto3" json:"unknown_field15,omitempty"`
	Uuid           string                        `protobuf:"bytes,16,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *ChatMessage) Reset() {
	*x = ChatMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_windsurf_message_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatMessage) ProtoMessage() {}

func (x *ChatMessage) ProtoReflect() protoreflect.Message {
	mi := &file_windsurf_message_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatMessage.ProtoReflect.Descriptor instead.
func (*ChatMessage) Descriptor() ([]byte, []int) {
	return file_windsurf_message_proto_rawDescGZIP(), []int{0}
}

func (x *ChatMessage) GetSchema() *ChatMessage_Schema {
	if x != nil {
		return x.Schema
	}
	return nil
}

func (x *ChatMessage) GetInstructions() string {
	if x != nil {
		return x.Instructions
	}
	return ""
}

func (x *ChatMessage) GetMessages() []*ChatMessage_UserMessage {
	if x != nil {
		return x.Messages
	}
	return nil
}

func (x *ChatMessage) GetModel() uint32 {
	if x != nil {
		return x.Model
	}
	return 0
}

func (x *ChatMessage) GetUnknownField7() uint32 {
	if x != nil {
		return x.UnknownField7
	}
	return 0
}

func (x *ChatMessage) GetConfig() *ChatMessage_Config {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *ChatMessage) GetUnknownField9() []*ChatMessage_Unknown_Field9 {
	if x != nil {
		return x.UnknownField9
	}
	return nil
}

func (x *ChatMessage) GetTools() []*ChatMessage_Tool {
	if x != nil {
		return x.Tools
	}
	return nil
}

func (x *ChatMessage) GetChoice() *ChatMessage_ToolChoice {
	if x != nil {
		return x.Choice
	}
	return nil
}

func (x *ChatMessage) GetUnknownField13() *ChatMessage_Unknown_Field13 {
	if x != nil {
		return x.UnknownField13
	}
	return nil
}

func (x *ChatMessage) GetUnknownField15() *ChatMessage_Unknown_Field15 {
	if x != nil {
		return x.UnknownField15
	}
	return nil
}

func (x *ChatMessage) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type ResMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 找不到think标记的字段？？
	Id            string                     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UnknownField2 *ResMessage_Unknown_Field2 `protobuf:"bytes,2,opt,name=unknown_field2,json=unknownField2,proto3" json:"unknown_field2,omitempty"`
	Message       string                     `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	CountToken    uint32                     `protobuf:"varint,4,opt,name=count_token,json=countToken,proto3" json:"count_token,omitempty"`
	UnknownField5 uint32                     `protobuf:"varint,5,opt,name=unknown_field5,json=unknownField5,proto3" json:"unknown_field5,omitempty"`
	Tokens        *ResMessage_Tokens         `protobuf:"bytes,7,opt,name=tokens,proto3" json:"tokens,omitempty"`
	Think         string                     `protobuf:"bytes,9,opt,name=think,proto3" json:"think,omitempty"`
}

func (x *ResMessage) Reset() {
	*x = ResMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_windsurf_message_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResMessage) ProtoMessage() {}

func (x *ResMessage) ProtoReflect() protoreflect.Message {
	mi := &file_windsurf_message_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResMessage.ProtoReflect.Descriptor instead.
func (*ResMessage) Descriptor() ([]byte, []int) {
	return file_windsurf_message_proto_rawDescGZIP(), []int{1}
}

func (x *ResMessage) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ResMessage) GetUnknownField2() *ResMessage_Unknown_Field2 {
	if x != nil {
		return x.UnknownField2
	}
	return nil
}

func (x *ResMessage) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ResMessage) GetCountToken() uint32 {
	if x != nil {
		return x.CountToken
	}
	return 0
}

func (x *ResMessage) GetUnknownField5() uint32 {
	if x != nil {
		return x.UnknownField5
	}
	return 0
}

func (x *ResMessage) GetTokens() *ResMessage_Tokens {
	if x != nil {
		return x.Tokens
	}
	return nil
}

func (x *ResMessage) GetThink() string {
	if x != nil {
		return x.Think
	}
	return ""
}

type Jwt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Args *Jwt_Args `protobuf:"bytes,1,opt,name=args,proto3" json:"args,omitempty"`
}

func (x *Jwt) Reset() {
	*x = Jwt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_windsurf_message_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Jwt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Jwt) ProtoMessage() {}

func (x *Jwt) ProtoReflect() protoreflect.Message {
	mi := &file_windsurf_message_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Jwt.ProtoReflect.Descriptor instead.
func (*Jwt) Descriptor() ([]byte, []int) {
	return file_windsurf_message_proto_rawDescGZIP(), []int{2}
}

func (x *Jwt) GetArgs() *Jwt_Args {
	if x != nil {
		return x.Args
	}
	return nil
}

type JwtToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *JwtToken) Reset() {
	*x = JwtToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_windsurf_message_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JwtToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JwtToken) ProtoMessage() {}

func (x *JwtToken) ProtoReflect() protoreflect.Message {
	mi := &file_windsurf_message_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JwtToken.ProtoReflect.Descriptor instead.
func (*JwtToken) Descriptor() ([]byte, []int) {
	return file_windsurf_message_proto_rawDescGZIP(), []int{3}
}

func (x *JwtToken) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type ChatMessage_Schema struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Version1 string `protobuf:"bytes,2,opt,name=version1,proto3" json:"version1,omitempty"`
	Id       string `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	Lang     string `protobuf:"bytes,4,opt,name=lang,proto3" json:"lang,omitempty"`
	Os       string `protobuf:"bytes,5,opt,name=os,proto3" json:"os,omitempty"`
	Version2 string `protobuf:"bytes,7,opt,name=version2,proto3" json:"version2,omitempty"`
	Equi     string `protobuf:"bytes,8,opt,name=equi,proto3" json:"equi,omitempty"`
	Title    string `protobuf:"bytes,12,opt,name=title,proto3" json:"title,omitempty"`
	Token    string `protobuf:"bytes,21,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *ChatMessage_Schema) Reset() {
	*x = ChatMessage_Schema{}
	if protoimpl.UnsafeEnabled {
		mi := &file_windsurf_message_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatMessage_Schema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatMessage_Schema) ProtoMessage() {}

func (x *ChatMessage_Schema) ProtoReflect() protoreflect.Message {
	mi := &file_windsurf_message_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatMessage_Schema.ProtoReflect.Descriptor instead.
func (*ChatMessage_Schema) Descriptor() ([]byte, []int) {
	return file_windsurf_message_proto_rawDescGZIP(), []int{0, 0}
}

func (x *ChatMessage_Schema) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ChatMessage_Schema) GetVersion1() string {
	if x != nil {
		return x.Version1
	}
	return ""
}

func (x *ChatMessage_Schema) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ChatMessage_Schema) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *ChatMessage_Schema) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *ChatMessage_Schema) GetVersion2() string {
	if x != nil {
		return x.Version2
	}
	return ""
}

func (x *ChatMessage_Schema) GetEqui() string {
	if x != nil {
		return x.Equi
	}
	return ""
}

func (x *ChatMessage_Schema) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ChatMessage_Schema) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type ChatMessage_UserMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role          uint32                                  `protobuf:"varint,2,opt,name=role,proto3" json:"role,omitempty"` // 上下文类型？？1 user, 2 bot
	Message       string                                  `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Token         uint32                                  `protobuf:"varint,4,opt,name=token,proto3" json:"token,omitempty"`
	UnknownField5 uint32                                  `protobuf:"varint,5,opt,name=unknown_field5,json=unknownField5,proto3" json:"unknown_field5,omitempty"`
	UnknownField8 *ChatMessage_UserMessage_Unknown_Field8 `protobuf:"bytes,8,opt,name=unknown_field8,json=unknownField8,proto3" json:"unknown_field8,omitempty"`
	Files         []*ChatMessage_UserMessage_File         `protobuf:"bytes,10,rep,name=files,proto3" json:"files,omitempty"`
}

func (x *ChatMessage_UserMessage) Reset() {
	*x = ChatMessage_UserMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_windsurf_message_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatMessage_UserMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatMessage_UserMessage) ProtoMessage() {}

func (x *ChatMessage_UserMessage) ProtoReflect() protoreflect.Message {
	mi := &file_windsurf_message_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatMessage_UserMessage.ProtoReflect.Descriptor instead.
func (*ChatMessage_UserMessage) Descriptor() ([]byte, []int) {
	return file_windsurf_message_proto_rawDescGZIP(), []int{0, 1}
}

func (x *ChatMessage_UserMessage) GetRole() uint32 {
	if x != nil {
		return x.Role
	}
	return 0
}

func (x *ChatMessage_UserMessage) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ChatMessage_UserMessage) GetToken() uint32 {
	if x != nil {
		return x.Token
	}
	return 0
}

func (x *ChatMessage_UserMessage) GetUnknownField5() uint32 {
	if x != nil {
		return x.UnknownField5
	}
	return 0
}

func (x *ChatMessage_UserMessage) GetUnknownField8() *ChatMessage_UserMessage_Unknown_Field8 {
	if x != nil {
		return x.UnknownField8
	}
	return nil
}

func (x *ChatMessage_UserMessage) GetFiles() []*ChatMessage_UserMessage_File {
	if x != nil {
		return x.Files
	}
	return nil
}

type ChatMessage_Config struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnknownField1    uint32   `protobuf:"varint,1,opt,name=unknown_field1,json=unknownField1,proto3" json:"unknown_field1,omitempty"`
	MaxTokens        uint32   `protobuf:"varint,2,opt,name=maxTokens,proto3" json:"maxTokens,omitempty"`
	TopK             uint32   `protobuf:"varint,3,opt,name=topK,proto3" json:"topK,omitempty"`
	TopP             float64  `protobuf:"fixed64,5,opt,name=topP,proto3" json:"topP,omitempty"`               // 不确定
	Temperature      float64  `protobuf:"fixed64,6,opt,name=temperature,proto3" json:"temperature,omitempty"` // 不确定
	UnknownField7    int32    `protobuf:"varint,7,opt,name=unknown_field7,json=unknownField7,proto3" json:"unknown_field7,omitempty"`
	PresencePenalty  float64  `protobuf:"fixed64,8,opt,name=presence_penalty,json=presencePenalty,proto3" json:"presence_penalty,omitempty"` // 不确定
	Stop             []string `protobuf:"bytes,9,rep,name=stop,proto3" json:"stop,omitempty"`
	FrequencyPenalty float64  `protobuf:"fixed64,11,opt,name=frequency_penalty,json=frequencyPenalty,proto3" json:"frequency_penalty,omitempty"` // 不确定
}

func (x *ChatMessage_Config) Reset() {
	*x = ChatMessage_Config{}
	if protoimpl.UnsafeEnabled {
		mi := &file_windsurf_message_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatMessage_Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatMessage_Config) ProtoMessage() {}

func (x *ChatMessage_Config) ProtoReflect() protoreflect.Message {
	mi := &file_windsurf_message_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatMessage_Config.ProtoReflect.Descriptor instead.
func (*ChatMessage_Config) Descriptor() ([]byte, []int) {
	return file_windsurf_message_proto_rawDescGZIP(), []int{0, 2}
}

func (x *ChatMessage_Config) GetUnknownField1() uint32 {
	if x != nil {
		return x.UnknownField1
	}
	return 0
}

func (x *ChatMessage_Config) GetMaxTokens() uint32 {
	if x != nil {
		return x.MaxTokens
	}
	return 0
}

func (x *ChatMessage_Config) GetTopK() uint32 {
	if x != nil {
		return x.TopK
	}
	return 0
}

func (x *ChatMessage_Config) GetTopP() float64 {
	if x != nil {
		return x.TopP
	}
	return 0
}

func (x *ChatMessage_Config) GetTemperature() float64 {
	if x != nil {
		return x.Temperature
	}
	return 0
}

func (x *ChatMessage_Config) GetUnknownField7() int32 {
	if x != nil {
		return x.UnknownField7
	}
	return 0
}

func (x *ChatMessage_Config) GetPresencePenalty() float64 {
	if x != nil {
		return x.PresencePenalty
	}
	return 0
}

func (x *ChatMessage_Config) GetStop() []string {
	if x != nil {
		return x.Stop
	}
	return nil
}

func (x *ChatMessage_Config) GetFrequencyPenalty() float64 {
	if x != nil {
		return x.FrequencyPenalty
	}
	return 0
}

type ChatMessage_Tool struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Desc   string `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`
	Schema string `protobuf:"bytes,3,opt,name=schema,proto3" json:"schema,omitempty"`
}

func (x *ChatMessage_Tool) Reset() {
	*x = ChatMessage_Tool{}
	if protoimpl.UnsafeEnabled {
		mi := &file_windsurf_message_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatMessage_Tool) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatMessage_Tool) ProtoMessage() {}

func (x *ChatMessage_Tool) ProtoReflect() protoreflect.Message {
	mi := &file_windsurf_message_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatMessage_Tool.ProtoReflect.Descriptor instead.
func (*ChatMessage_Tool) Descriptor() ([]byte, []int) {
	return file_windsurf_message_proto_rawDescGZIP(), []int{0, 3}
}

func (x *ChatMessage_Tool) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ChatMessage_Tool) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *ChatMessage_Tool) GetSchema() string {
	if x != nil {
		return x.Schema
	}
	return ""
}

type ChatMessage_ToolChoice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *ChatMessage_ToolChoice) Reset() {
	*x = ChatMessage_ToolChoice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_windsurf_message_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatMessage_ToolChoice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatMessage_ToolChoice) ProtoMessage() {}

func (x *ChatMessage_ToolChoice) ProtoReflect() protoreflect.Message {
	mi := &file_windsurf_message_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatMessage_ToolChoice.ProtoReflect.Descriptor instead.
func (*ChatMessage_ToolChoice) Descriptor() ([]byte, []int) {
	return file_windsurf_message_proto_rawDescGZIP(), []int{0, 4}
}

func (x *ChatMessage_ToolChoice) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type ChatMessage_Unknown_Field9 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *ChatMessage_Unknown_Field9_Data `protobuf:"bytes,6,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *ChatMessage_Unknown_Field9) Reset() {
	*x = ChatMessage_Unknown_Field9{}
	if protoimpl.UnsafeEnabled {
		mi := &file_windsurf_message_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatMessage_Unknown_Field9) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatMessage_Unknown_Field9) ProtoMessage() {}

func (x *ChatMessage_Unknown_Field9) ProtoReflect() protoreflect.Message {
	mi := &file_windsurf_message_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatMessage_Unknown_Field9.ProtoReflect.Descriptor instead.
func (*ChatMessage_Unknown_Field9) Descriptor() ([]byte, []int) {
	return file_windsurf_message_proto_rawDescGZIP(), []int{0, 5}
}

func (x *ChatMessage_Unknown_Field9) GetValue() *ChatMessage_Unknown_Field9_Data {
	if x != nil {
		return x.Value
	}
	return nil
}

type ChatMessage_Unknown_Field13 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value uint32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *ChatMessage_Unknown_Field13) Reset() {
	*x = ChatMessage_Unknown_Field13{}
	if protoimpl.UnsafeEnabled {
		mi := &file_windsurf_message_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatMessage_Unknown_Field13) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatMessage_Unknown_Field13) ProtoMessage() {}

func (x *ChatMessage_Unknown_Field13) ProtoReflect() protoreflect.Message {
	mi := &file_windsurf_message_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatMessage_Unknown_Field13.ProtoReflect.Descriptor instead.
func (*ChatMessage_Unknown_Field13) Descriptor() ([]byte, []int) {
	return file_windsurf_message_proto_rawDescGZIP(), []int{0, 6}
}

func (x *ChatMessage_Unknown_Field13) GetValue() uint32 {
	if x != nil {
		return x.Value
	}
	return 0
}

type ChatMessage_Unknown_Field15 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid  string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Value uint32 `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *ChatMessage_Unknown_Field15) Reset() {
	*x = ChatMessage_Unknown_Field15{}
	if protoimpl.UnsafeEnabled {
		mi := &file_windsurf_message_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatMessage_Unknown_Field15) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatMessage_Unknown_Field15) ProtoMessage() {}

func (x *ChatMessage_Unknown_Field15) ProtoReflect() protoreflect.Message {
	mi := &file_windsurf_message_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatMessage_Unknown_Field15.ProtoReflect.Descriptor instead.
func (*ChatMessage_Unknown_Field15) Descriptor() ([]byte, []int) {
	return file_windsurf_message_proto_rawDescGZIP(), []int{0, 7}
}

func (x *ChatMessage_Unknown_Field15) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *ChatMessage_Unknown_Field15) GetValue() uint32 {
	if x != nil {
		return x.Value
	}
	return 0
}

type ChatMessage_UserMessage_Unknown_Field8 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value uint32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *ChatMessage_UserMessage_Unknown_Field8) Reset() {
	*x = ChatMessage_UserMessage_Unknown_Field8{}
	if protoimpl.UnsafeEnabled {
		mi := &file_windsurf_message_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatMessage_UserMessage_Unknown_Field8) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatMessage_UserMessage_Unknown_Field8) ProtoMessage() {}

func (x *ChatMessage_UserMessage_Unknown_Field8) ProtoReflect() protoreflect.Message {
	mi := &file_windsurf_message_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatMessage_UserMessage_Unknown_Field8.ProtoReflect.Descriptor instead.
func (*ChatMessage_UserMessage_Unknown_Field8) Descriptor() ([]byte, []int) {
	return file_windsurf_message_proto_rawDescGZIP(), []int{0, 1, 0}
}

func (x *ChatMessage_UserMessage_Unknown_Field8) GetValue() uint32 {
	if x != nil {
		return x.Value
	}
	return 0
}

type ChatMessage_UserMessage_File struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value     string                                  `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`         // base64
	Timestamp *ChatMessage_UserMessage_File_Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"` // ?? 不确定是否是日期，建议固定值
}

func (x *ChatMessage_UserMessage_File) Reset() {
	*x = ChatMessage_UserMessage_File{}
	if protoimpl.UnsafeEnabled {
		mi := &file_windsurf_message_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatMessage_UserMessage_File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatMessage_UserMessage_File) ProtoMessage() {}

func (x *ChatMessage_UserMessage_File) ProtoReflect() protoreflect.Message {
	mi := &file_windsurf_message_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatMessage_UserMessage_File.ProtoReflect.Descriptor instead.
func (*ChatMessage_UserMessage_File) Descriptor() ([]byte, []int) {
	return file_windsurf_message_proto_rawDescGZIP(), []int{0, 1, 1}
}

func (x *ChatMessage_UserMessage_File) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *ChatMessage_UserMessage_File) GetTimestamp() *ChatMessage_UserMessage_File_Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type ChatMessage_UserMessage_File_Timestamp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value uint64 `protobuf:"fixed64,13,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *ChatMessage_UserMessage_File_Timestamp) Reset() {
	*x = ChatMessage_UserMessage_File_Timestamp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_windsurf_message_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatMessage_UserMessage_File_Timestamp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatMessage_UserMessage_File_Timestamp) ProtoMessage() {}

func (x *ChatMessage_UserMessage_File_Timestamp) ProtoReflect() protoreflect.Message {
	mi := &file_windsurf_message_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatMessage_UserMessage_File_Timestamp.ProtoReflect.Descriptor instead.
func (*ChatMessage_UserMessage_File_Timestamp) Descriptor() ([]byte, []int) {
	return file_windsurf_message_proto_rawDescGZIP(), []int{0, 1, 1, 0}
}

func (x *ChatMessage_UserMessage_File_Timestamp) GetValue() uint64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type ChatMessage_Unknown_Field9_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnknownField1 uint32 `protobuf:"varint,1,opt,name=unknown_field1,json=unknownField1,proto3" json:"unknown_field1,omitempty"` //
	Value3        string `protobuf:"bytes,3,opt,name=value3,proto3" json:"value3,omitempty"`
	Value5        string `protobuf:"bytes,5,opt,name=value5,proto3" json:"value5,omitempty"`
	UnknownField6 uint32 `protobuf:"varint,6,opt,name=unknown_field6,json=unknownField6,proto3" json:"unknown_field6,omitempty"` // 1
	UnknownField7 uint32 `protobuf:"varint,7,opt,name=unknown_field7,json=unknownField7,proto3" json:"unknown_field7,omitempty"` // 2
}

func (x *ChatMessage_Unknown_Field9_Data) Reset() {
	*x = ChatMessage_Unknown_Field9_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_windsurf_message_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatMessage_Unknown_Field9_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatMessage_Unknown_Field9_Data) ProtoMessage() {}

func (x *ChatMessage_Unknown_Field9_Data) ProtoReflect() protoreflect.Message {
	mi := &file_windsurf_message_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatMessage_Unknown_Field9_Data.ProtoReflect.Descriptor instead.
func (*ChatMessage_Unknown_Field9_Data) Descriptor() ([]byte, []int) {
	return file_windsurf_message_proto_rawDescGZIP(), []int{0, 5, 0}
}

func (x *ChatMessage_Unknown_Field9_Data) GetUnknownField1() uint32 {
	if x != nil {
		return x.UnknownField1
	}
	return 0
}

func (x *ChatMessage_Unknown_Field9_Data) GetValue3() string {
	if x != nil {
		return x.Value3
	}
	return ""
}

func (x *ChatMessage_Unknown_Field9_Data) GetValue5() string {
	if x != nil {
		return x.Value5
	}
	return ""
}

func (x *ChatMessage_Unknown_Field9_Data) GetUnknownField6() uint32 {
	if x != nil {
		return x.UnknownField6
	}
	return 0
}

func (x *ChatMessage_Unknown_Field9_Data) GetUnknownField7() uint32 {
	if x != nil {
		return x.UnknownField7
	}
	return 0
}

type ResMessage_Unknown_Field2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value1 int32 `protobuf:"varint,1,opt,name=value1,proto3" json:"value1,omitempty"`
	Value2 int32 `protobuf:"varint,2,opt,name=value2,proto3" json:"value2,omitempty"`
}

func (x *ResMessage_Unknown_Field2) Reset() {
	*x = ResMessage_Unknown_Field2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_windsurf_message_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResMessage_Unknown_Field2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResMessage_Unknown_Field2) ProtoMessage() {}

func (x *ResMessage_Unknown_Field2) ProtoReflect() protoreflect.Message {
	mi := &file_windsurf_message_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResMessage_Unknown_Field2.ProtoReflect.Descriptor instead.
func (*ResMessage_Unknown_Field2) Descriptor() ([]byte, []int) {
	return file_windsurf_message_proto_rawDescGZIP(), []int{1, 0}
}

func (x *ResMessage_Unknown_Field2) GetValue1() int32 {
	if x != nil {
		return x.Value1
	}
	return 0
}

func (x *ResMessage_Unknown_Field2) GetValue2() int32 {
	if x != nil {
		return x.Value2
	}
	return 0
}

type ResMessage_Tokens struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Model          int32                     `protobuf:"varint,1,opt,name=model,proto3" json:"model,omitempty"`
	UnknownField2  int32                     `protobuf:"varint,2,opt,name=unknown_field2,json=unknownField2,proto3" json:"unknown_field2,omitempty"`
	UnknownField3  int32                     `protobuf:"varint,3,opt,name=unknown_field3,json=unknownField3,proto3" json:"unknown_field3,omitempty"`
	UnknownField4  int32                     `protobuf:"varint,4,opt,name=unknown_field4,json=unknownField4,proto3" json:"unknown_field4,omitempty"`
	UnknownField5  int32                     `protobuf:"varint,5,opt,name=unknown_field5,json=unknownField5,proto3" json:"unknown_field5,omitempty"`
	UnknownField6  int32                     `protobuf:"varint,6,opt,name=unknown_field6,json=unknownField6,proto3" json:"unknown_field6,omitempty"`
	Uuid           string                    `protobuf:"bytes,7,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Args           []*ResMessage_Tokens_Args `protobuf:"bytes,8,rep,name=args,proto3" json:"args,omitempty"`
	UnknownField10 string                    `protobuf:"bytes,10,opt,name=unknown_field10,json=unknownField10,proto3" json:"unknown_field10,omitempty"`
}

func (x *ResMessage_Tokens) Reset() {
	*x = ResMessage_Tokens{}
	if protoimpl.UnsafeEnabled {
		mi := &file_windsurf_message_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResMessage_Tokens) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResMessage_Tokens) ProtoMessage() {}

func (x *ResMessage_Tokens) ProtoReflect() protoreflect.Message {
	mi := &file_windsurf_message_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResMessage_Tokens.ProtoReflect.Descriptor instead.
func (*ResMessage_Tokens) Descriptor() ([]byte, []int) {
	return file_windsurf_message_proto_rawDescGZIP(), []int{1, 1}
}

func (x *ResMessage_Tokens) GetModel() int32 {
	if x != nil {
		return x.Model
	}
	return 0
}

func (x *ResMessage_Tokens) GetUnknownField2() int32 {
	if x != nil {
		return x.UnknownField2
	}
	return 0
}

func (x *ResMessage_Tokens) GetUnknownField3() int32 {
	if x != nil {
		return x.UnknownField3
	}
	return 0
}

func (x *ResMessage_Tokens) GetUnknownField4() int32 {
	if x != nil {
		return x.UnknownField4
	}
	return 0
}

func (x *ResMessage_Tokens) GetUnknownField5() int32 {
	if x != nil {
		return x.UnknownField5
	}
	return 0
}

func (x *ResMessage_Tokens) GetUnknownField6() int32 {
	if x != nil {
		return x.UnknownField6
	}
	return 0
}

func (x *ResMessage_Tokens) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *ResMessage_Tokens) GetArgs() []*ResMessage_Tokens_Args {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *ResMessage_Tokens) GetUnknownField10() string {
	if x != nil {
		return x.UnknownField10
	}
	return ""
}

type ResMessage_Tokens_Args struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *ResMessage_Tokens_Args) Reset() {
	*x = ResMessage_Tokens_Args{}
	if protoimpl.UnsafeEnabled {
		mi := &file_windsurf_message_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResMessage_Tokens_Args) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResMessage_Tokens_Args) ProtoMessage() {}

func (x *ResMessage_Tokens_Args) ProtoReflect() protoreflect.Message {
	mi := &file_windsurf_message_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResMessage_Tokens_Args.ProtoReflect.Descriptor instead.
func (*ResMessage_Tokens_Args) Descriptor() ([]byte, []int) {
	return file_windsurf_message_proto_rawDescGZIP(), []int{1, 1, 0}
}

func (x *ResMessage_Tokens_Args) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ResMessage_Tokens_Args) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type Jwt_Args struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Version1 string `protobuf:"bytes,2,opt,name=version1,proto3" json:"version1,omitempty"`
	Ident    string `protobuf:"bytes,3,opt,name=ident,proto3" json:"ident,omitempty"`
	Lang     string `protobuf:"bytes,4,opt,name=lang,proto3" json:"lang,omitempty"`
	Version2 string `protobuf:"bytes,7,opt,name=version2,proto3" json:"version2,omitempty"`
	Title    string `protobuf:"bytes,12,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *Jwt_Args) Reset() {
	*x = Jwt_Args{}
	if protoimpl.UnsafeEnabled {
		mi := &file_windsurf_message_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Jwt_Args) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Jwt_Args) ProtoMessage() {}

func (x *Jwt_Args) ProtoReflect() protoreflect.Message {
	mi := &file_windsurf_message_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Jwt_Args.ProtoReflect.Descriptor instead.
func (*Jwt_Args) Descriptor() ([]byte, []int) {
	return file_windsurf_message_proto_rawDescGZIP(), []int{2, 0}
}

func (x *Jwt_Args) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Jwt_Args) GetVersion1() string {
	if x != nil {
		return x.Version1
	}
	return ""
}

func (x *Jwt_Args) GetIdent() string {
	if x != nil {
		return x.Ident
	}
	return ""
}

func (x *Jwt_Args) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *Jwt_Args) GetVersion2() string {
	if x != nil {
		return x.Version2
	}
	return ""
}

func (x *Jwt_Args) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

var File_windsurf_message_proto protoreflect.FileDescriptor

var file_windsurf_message_proto_rawDesc = []byte{
	0x0a, 0x16, 0x77, 0x69, 0x6e, 0x64, 0x73, 0x75, 0x72, 0x66, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x77, 0x69, 0x6e, 0x64, 0x73, 0x75,
	0x72, 0x66, 0x22, 0x9e, 0x10, 0x0a, 0x0b, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x34, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x77, 0x69, 0x6e, 0x64, 0x73, 0x75, 0x72, 0x66, 0x2e, 0x43, 0x68,
	0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x52, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x22, 0x0a, 0x0c, 0x49, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3d, 0x0a, 0x08,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x77, 0x69, 0x6e, 0x64, 0x73, 0x75, 0x72, 0x66, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x12, 0x25, 0x0a, 0x0e, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x37, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x75, 0x6e, 0x6b, 0x6e, 0x6f,
	0x77, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x37, 0x12, 0x34, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x77, 0x69, 0x6e, 0x64, 0x73,
	0x75, 0x72, 0x66, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x4b,
	0x0a, 0x0e, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x39,
	0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x77, 0x69, 0x6e, 0x64, 0x73, 0x75, 0x72,
	0x66, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x55, 0x6e,
	0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x39, 0x52, 0x0d, 0x75, 0x6e,
	0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x39, 0x12, 0x30, 0x0a, 0x05, 0x74,
	0x6f, 0x6f, 0x6c, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x77, 0x69, 0x6e,
	0x64, 0x73, 0x75, 0x72, 0x66, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x54, 0x6f, 0x6f, 0x6c, 0x52, 0x05, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x12, 0x38, 0x0a,
	0x06, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x77, 0x69, 0x6e, 0x64, 0x73, 0x75, 0x72, 0x66, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x54, 0x6f, 0x6f, 0x6c, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x52,
	0x06, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x12, 0x4e, 0x0a, 0x0f, 0x75, 0x6e, 0x6b, 0x6e, 0x6f,
	0x77, 0x6e, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x33, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x77, 0x69, 0x6e, 0x64, 0x73, 0x75, 0x72, 0x66, 0x2e, 0x43, 0x68, 0x61, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x33, 0x52, 0x0e, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x33, 0x12, 0x4e, 0x0a, 0x0f, 0x75, 0x6e, 0x6b, 0x6e, 0x6f,
	0x77, 0x6e, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x35, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x77, 0x69, 0x6e, 0x64, 0x73, 0x75, 0x72, 0x66, 0x2e, 0x43, 0x68, 0x61, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x35, 0x52, 0x0e, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x35, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x1a, 0xc8, 0x01, 0x0a, 0x06,
	0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x31, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x31, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6f, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x32, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x32, 0x12, 0x12, 0x0a, 0x04, 0x65, 0x71, 0x75, 0x69, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x65, 0x71, 0x75, 0x69, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x1a, 0xc9, 0x03, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x75, 0x6e,
	0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x35, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0d, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x35, 0x12, 0x57, 0x0a, 0x0e, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x38, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x77, 0x69, 0x6e, 0x64,
	0x73, 0x75, 0x72, 0x66, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x55, 0x6e, 0x6b,
	0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x38, 0x52, 0x0d, 0x75, 0x6e, 0x6b,
	0x6e, 0x6f, 0x77, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x38, 0x12, 0x3c, 0x0a, 0x05, 0x66, 0x69,
	0x6c, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x77, 0x69, 0x6e, 0x64,
	0x73, 0x75, 0x72, 0x66, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x46, 0x69, 0x6c,
	0x65, 0x52, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x1a, 0x26, 0x0a, 0x0e, 0x55, 0x6e, 0x6b, 0x6e,
	0x6f, 0x77, 0x6e, 0x5f, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x38, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x1a, 0x8f, 0x01, 0x0a, 0x04, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x4e, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x30, 0x2e, 0x77, 0x69, 0x6e, 0x64, 0x73, 0x75, 0x72, 0x66, 0x2e, 0x43, 0x68,
	0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x1a,
	0x21, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x06, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x1a, 0xaa, 0x02, 0x0a, 0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x25, 0x0a,
	0x0e, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x31, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x6f, 0x70, 0x4b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x04, 0x74, 0x6f, 0x70, 0x4b, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x6f, 0x70, 0x50, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x74, 0x6f, 0x70, 0x50, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x65,
	0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x25, 0x0a, 0x0e,
	0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x37, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x37, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x5f,
	0x70, 0x65, 0x6e, 0x61, 0x6c, 0x74, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0f, 0x70,
	0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x50, 0x65, 0x6e, 0x61, 0x6c, 0x74, 0x79, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x74, 0x6f, 0x70, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x73, 0x74,
	0x6f, 0x70, 0x12, 0x2b, 0x0a, 0x11, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x5f,
	0x70, 0x65, 0x6e, 0x61, 0x6c, 0x74, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x10, 0x66,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x50, 0x65, 0x6e, 0x61, 0x6c, 0x74, 0x79, 0x1a,
	0x46, 0x0a, 0x04, 0x54, 0x6f, 0x6f, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x65, 0x73, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x1a, 0x22, 0x0a, 0x0a, 0x54, 0x6f, 0x6f, 0x6c, 0x43,
	0x68, 0x6f, 0x69, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0xff, 0x01, 0x0a, 0x0e,
	0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x39, 0x12, 0x3f,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e,
	0x77, 0x69, 0x6e, 0x64, 0x73, 0x75, 0x72, 0x66, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x39, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x1a,
	0xab, 0x01, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x25, 0x0a, 0x0e, 0x75, 0x6e, 0x6b, 0x6e,
	0x6f, 0x77, 0x6e, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0d, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x12,
	0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x33, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x33, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x35, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x35, 0x12,
	0x25, 0x0a, 0x0e, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x36, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x36, 0x12, 0x25, 0x0a, 0x0e, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77,
	0x6e, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x37, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d,
	0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x37, 0x1a, 0x27, 0x0a,
	0x0f, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x33,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x3b, 0x0a, 0x0f, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77,
	0x6e, 0x5f, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x35, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0xde, 0x05, 0x0a, 0x0a, 0x52, 0x65, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x4a, 0x0a, 0x0e, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x77, 0x69, 0x6e,
	0x64, 0x73, 0x75, 0x72, 0x66, 0x2e, 0x52, 0x65, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x32, 0x52,
	0x0d, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x32, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x75, 0x6e, 0x6b,
	0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x35, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0d, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x35,
	0x12, 0x33, 0x0a, 0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x77, 0x69, 0x6e, 0x64, 0x73, 0x75, 0x72, 0x66, 0x2e, 0x52, 0x65, 0x73, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x52, 0x06, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x68, 0x69, 0x6e, 0x6b, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x68, 0x69, 0x6e, 0x6b, 0x1a, 0x40, 0x0a, 0x0e, 0x55,
	0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x32, 0x12, 0x16, 0x0a,
	0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x31, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x32, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x32, 0x1a, 0x84, 0x03,
	0x0a, 0x06, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x25,
	0x0a, 0x0e, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x32,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x32, 0x12, 0x25, 0x0a, 0x0e, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e,
	0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x33, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x75,
	0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x33, 0x12, 0x25, 0x0a, 0x0e,
	0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x34, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x34, 0x12, 0x25, 0x0a, 0x0e, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x35, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x75, 0x6e, 0x6b,
	0x6e, 0x6f, 0x77, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x35, 0x12, 0x25, 0x0a, 0x0e, 0x75, 0x6e,
	0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x36, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0d, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x36, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x34, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x73, 0x18, 0x08, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x77, 0x69, 0x6e, 0x64, 0x73, 0x75, 0x72, 0x66, 0x2e, 0x52,
	0x65, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73,
	0x2e, 0x41, 0x72, 0x67, 0x73, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x75,
	0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x30, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x31, 0x30, 0x1a, 0x2e, 0x0a, 0x04, 0x41, 0x72, 0x67, 0x73, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0xc2, 0x01, 0x0a, 0x03, 0x4a, 0x77, 0x74, 0x12, 0x26, 0x0a, 0x04,
	0x61, 0x72, 0x67, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x77, 0x69, 0x6e,
	0x64, 0x73, 0x75, 0x72, 0x66, 0x2e, 0x4a, 0x77, 0x74, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x52, 0x04,
	0x61, 0x72, 0x67, 0x73, 0x1a, 0x92, 0x01, 0x0a, 0x04, 0x41, 0x72, 0x67, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x31, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x31, 0x12, 0x14, 0x0a,
	0x05, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x32, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x32, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x22, 0x20, 0x0a, 0x08, 0x4a, 0x77, 0x74,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x0c, 0x5a, 0x0a, 0x2e,
	0x2f, 0x77, 0x69, 0x6e, 0x64, 0x73, 0x75, 0x72, 0x66, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_windsurf_message_proto_rawDescOnce sync.Once
	file_windsurf_message_proto_rawDescData = file_windsurf_message_proto_rawDesc
)

func file_windsurf_message_proto_rawDescGZIP() []byte {
	file_windsurf_message_proto_rawDescOnce.Do(func() {
		file_windsurf_message_proto_rawDescData = protoimpl.X.CompressGZIP(file_windsurf_message_proto_rawDescData)
	})
	return file_windsurf_message_proto_rawDescData
}

var file_windsurf_message_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_windsurf_message_proto_goTypes = []interface{}{
	(*ChatMessage)(nil),                            // 0: windsurf.ChatMessage
	(*ResMessage)(nil),                             // 1: windsurf.ResMessage
	(*Jwt)(nil),                                    // 2: windsurf.Jwt
	(*JwtToken)(nil),                               // 3: windsurf.JwtToken
	(*ChatMessage_Schema)(nil),                     // 4: windsurf.ChatMessage.Schema
	(*ChatMessage_UserMessage)(nil),                // 5: windsurf.ChatMessage.UserMessage
	(*ChatMessage_Config)(nil),                     // 6: windsurf.ChatMessage.Config
	(*ChatMessage_Tool)(nil),                       // 7: windsurf.ChatMessage.Tool
	(*ChatMessage_ToolChoice)(nil),                 // 8: windsurf.ChatMessage.ToolChoice
	(*ChatMessage_Unknown_Field9)(nil),             // 9: windsurf.ChatMessage.Unknown_Field9
	(*ChatMessage_Unknown_Field13)(nil),            // 10: windsurf.ChatMessage.Unknown_Field13
	(*ChatMessage_Unknown_Field15)(nil),            // 11: windsurf.ChatMessage.Unknown_Field15
	(*ChatMessage_UserMessage_Unknown_Field8)(nil), // 12: windsurf.ChatMessage.UserMessage.Unknown_Field8
	(*ChatMessage_UserMessage_File)(nil),           // 13: windsurf.ChatMessage.UserMessage.File
	(*ChatMessage_UserMessage_File_Timestamp)(nil), // 14: windsurf.ChatMessage.UserMessage.File.Timestamp
	(*ChatMessage_Unknown_Field9_Data)(nil),        // 15: windsurf.ChatMessage.Unknown_Field9.Data
	(*ResMessage_Unknown_Field2)(nil),              // 16: windsurf.ResMessage.Unknown_Field2
	(*ResMessage_Tokens)(nil),                      // 17: windsurf.ResMessage.Tokens
	(*ResMessage_Tokens_Args)(nil),                 // 18: windsurf.ResMessage.Tokens.Args
	(*Jwt_Args)(nil),                               // 19: windsurf.Jwt.Args
}
var file_windsurf_message_proto_depIdxs = []int32{
	4,  // 0: windsurf.ChatMessage.schema:type_name -> windsurf.ChatMessage.Schema
	5,  // 1: windsurf.ChatMessage.messages:type_name -> windsurf.ChatMessage.UserMessage
	6,  // 2: windsurf.ChatMessage.config:type_name -> windsurf.ChatMessage.Config
	9,  // 3: windsurf.ChatMessage.unknown_field9:type_name -> windsurf.ChatMessage.Unknown_Field9
	7,  // 4: windsurf.ChatMessage.tools:type_name -> windsurf.ChatMessage.Tool
	8,  // 5: windsurf.ChatMessage.choice:type_name -> windsurf.ChatMessage.ToolChoice
	10, // 6: windsurf.ChatMessage.unknown_field13:type_name -> windsurf.ChatMessage.Unknown_Field13
	11, // 7: windsurf.ChatMessage.unknown_field15:type_name -> windsurf.ChatMessage.Unknown_Field15
	16, // 8: windsurf.ResMessage.unknown_field2:type_name -> windsurf.ResMessage.Unknown_Field2
	17, // 9: windsurf.ResMessage.tokens:type_name -> windsurf.ResMessage.Tokens
	19, // 10: windsurf.Jwt.args:type_name -> windsurf.Jwt.Args
	12, // 11: windsurf.ChatMessage.UserMessage.unknown_field8:type_name -> windsurf.ChatMessage.UserMessage.Unknown_Field8
	13, // 12: windsurf.ChatMessage.UserMessage.files:type_name -> windsurf.ChatMessage.UserMessage.File
	15, // 13: windsurf.ChatMessage.Unknown_Field9.value:type_name -> windsurf.ChatMessage.Unknown_Field9.Data
	14, // 14: windsurf.ChatMessage.UserMessage.File.timestamp:type_name -> windsurf.ChatMessage.UserMessage.File.Timestamp
	18, // 15: windsurf.ResMessage.Tokens.args:type_name -> windsurf.ResMessage.Tokens.Args
	16, // [16:16] is the sub-list for method output_type
	16, // [16:16] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_windsurf_message_proto_init() }
func file_windsurf_message_proto_init() {
	if File_windsurf_message_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_windsurf_message_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_windsurf_message_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_windsurf_message_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Jwt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_windsurf_message_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JwtToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_windsurf_message_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatMessage_Schema); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_windsurf_message_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatMessage_UserMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_windsurf_message_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatMessage_Config); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_windsurf_message_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatMessage_Tool); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_windsurf_message_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatMessage_ToolChoice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_windsurf_message_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatMessage_Unknown_Field9); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_windsurf_message_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatMessage_Unknown_Field13); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_windsurf_message_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatMessage_Unknown_Field15); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_windsurf_message_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatMessage_UserMessage_Unknown_Field8); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_windsurf_message_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatMessage_UserMessage_File); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_windsurf_message_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatMessage_UserMessage_File_Timestamp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_windsurf_message_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatMessage_Unknown_Field9_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_windsurf_message_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResMessage_Unknown_Field2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_windsurf_message_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResMessage_Tokens); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_windsurf_message_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResMessage_Tokens_Args); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_windsurf_message_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Jwt_Args); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_windsurf_message_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_windsurf_message_proto_goTypes,
		DependencyIndexes: file_windsurf_message_proto_depIdxs,
		MessageInfos:      file_windsurf_message_proto_msgTypes,
	}.Build()
	File_windsurf_message_proto = out.File
	file_windsurf_message_proto_rawDesc = nil
	file_windsurf_message_proto_goTypes = nil
	file_windsurf_message_proto_depIdxs = nil
}
